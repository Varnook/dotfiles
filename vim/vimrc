if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin('~/.vim/plugged')
Plug 'scrooloose/nerdtree'
Plug 'ajh17/VimCompletesMe'
Plug '~/.vim/colors'
call plug#end()

let g:ycm_confirm_extra_conf = 0
let g:ycm_semantic_triggers={
	\ 'c':['re!\w{2}'],
	\ 'cpp':['re!\w{2}'],
	\ 'python':['re!\w{2}']
	\}


color custom

set encoding=utf-8
set ttymouse=sgr
set number
set relativenumber
syntax enable
set background=dark
set autoindent
set smartindent
set tabstop=4
set shiftwidth=4
set nowrap
set completeopt-=preview

inoremap {<cr> {<cr>}<c-o>O
inoremap [<cr> [<cr>]<c-o>O
inoremap (<cr> (<cr>)<c-o>O

nnoremap <c-n> :call ToggleTerminal() <CR>
nnoremap <c-l> :call NrdTree() <CR>

let g:toggle_term = "<c-n>"
let s:toggled_term = -1

function! ToggleTerminal()
	if s:toggled_term == -1
		terminal
		execute "normal \<c-w>J"
		execute "normal \<c-w>b"
		execute "resize" . (winheight(0) * 1/3)
		let s:toggled_term = bufnr("$")
	else
		execute "bd! " .s:toggled_term
		let s:toggled_term = -1
	endif
endfunction

execute "tnoremap ".g:toggle_term ." <C-w>:call ToggleTerminal()<CR>"

function! NrdTree()
	if g:NERDTree.IsOpen() 
		execute "NERDTreeClose"
	else		
		execute "NERDTree"
		execute "vertical resize" . (winwidth(0) * 2/3)
	endif
endfunction

autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
autocmd FileType vim let b:vcm_tab_complete = 'vim'
autocmd FileType c   let b:vcm_tab_complete = 'c'
autocmd FileType cpp let b:vcm_tab_complete = 'cpp'
